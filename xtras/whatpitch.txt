What do sagittal symbols really represent?
------------------------------------------

[This was posted to the 'tuning' Yahoo group on 2004-12-30
in the thread 'Adapting Sagittal notation for use in Csound' 
in response to some excellent questions by Herman Miller.]

The question of what a particular sagittal "really represents", when
combined with a particular nominal, has been reexamined recently
thanks to Robert Walker, who has been busy implementing sagittal in
Fractal Tune Smithy - particularly its chord-progression player.

For the benefit of other readers: Sagittal isn't so much a notation,
as a notation _system_. It encompasses notations for many different
tunings in such a way that they are _harmonically_ consistent with
each other, while melodic consistency is maintained as much as
possible within that constraint. For example, in any given tuning, a
4:5:6 major triad on C, or the best available approximation thereof,
will always be notated C:E\:G, unless it happens to be in a
temperament where the syntonic comma vanishes and can therefore be
notated more simply as C:E:G.

A single _notation_, within the Sagittal system, is characterised by
a notational octave size and a notational fifth size (which
determine the meaning of the nominals), and a limited set of
accidental symbols, and some lookup tables:

For unambiguously converting from pitch to symbol, a notation must
also give a range of pitch alterations corresponding to each symbol -
  the symbol's "capture zone" - with no overlaps and no gaps between
capture zones. It is enough to list the symbols in pitch order and
give the lower-bound for each in cents.

And for unambiguously converting from symbol to pitch it must give a
single _default_ pitch alteration corresponding to each symbol. This
default pitch alteration must of course be within the symbol's
capture zone.

You can see this information in Scala's various SAxxx.PAR files,
although in the case of ET notations a greatly abbreviated form can
be used since the defaults are simply successive degrees of the ET
and the zone boundaries are simply half-way between the degrees.

In the case of the 12-ET-relative "Trojan" notation, the lower-
bounds are given in cents and the defaults are given as fractions of
a 12-ET semitone.

In the case of the various JI notations (of which only the medium-
resolution "Athenian" notation has so far been defined), the lower
bounds are given in cents and the defaults are given as exact
frequency ratios.

In fact, these default JI ratios are the glue holding the whole
Sagittal system together. They are, in the absence of any further
information, what the symbols "really represent". We refer to them
as the symbol's "primary comma".

In order to make the Sagittal system work as well as possible across
so many different tunings, we defined symbols for the most popular
notational commas, i.e. the commas most often needed to notate the
most popular ratios.

The best way we could figure to determine ratio popularity was to
look at their occurrences in the Scala archive (thanks Manuel). This
decision might be controversial, but if you look at the results, you
see that in most cases the decision as to which comma to use in a
certain vicinity is like chalk and cheese, one of them notates
ratios that occur many times more often, and this usually agrees
with our intuitions based on consonance, ratio complexity, prime
limit and so on.

However, an important proviso above is that the primary comma (or
tempered version thereof) is the default pitch alteration "in the
absence of any further information". For example, if we know that an
ET is being notated, then the default pitch will be an exact degree
of the ET. In fact it will be the degree that is closest to the
tempered primary comma (with some very rare exceptions where a
secondary comma is used because no simple primary is available).

But we recently realised that even in the case of JI notations we
were not using all the available information to determine exactly
what alteration a sagittal should default to ("really represent").
We were not using the nominal (and sharps or flats), although these
were of course being used to determine the gross pitch. So for the
Athenian JI notation (the only one so far defined) we revisited the
Scala archive statistics and found the most popular ratio that would
be notated by each combination of nominal, sharps or flats and
sagittal symbol.

So the sagittal symbol can now "really represent" slightly different
pitch alterations (different commas) depending on the nominal it is
associated with. It now gives the ratio you actually wanted, maybe
99% of the time, and severely reduces the need to use higher-
resolution notations involving accented symbols or more complex
unaccented symbols. We've increased the precision without increasing
the number of symbols. This is what we call "smart defaults".

The resulting two-dimensional lookup table appears here as a zipped
Excel spreadsheet (28 kB).
http://sagittal.org/AthenianSmartDefaults.zip

> Wouldn't you need to know what key the music is in?

If you had that information, you could certainly use it to
advantage. The horizontal index to the lookup table is intended to
be the distance in fifths of the nominal-plus-sharps-or-flats from
the (possibly local) 1/1 or tonic. But even without that
information, 1/1 can default to C and the smart defaults will still
be significantly better than always using the primary comma, unless
the key is very far from C on the chain of fifths.

If you can identify the roots of chords (as you can in Fractal Tune
Smithy's chord-progression player), then these can also be used as
local 1/1s for the purpose of sagittal smart defaults.

And we still intend to define higher resolution JI notations, that
use accent marks (like the "semantic radicals" of Chinese text) to
indicate which of several possibilities are intended, or to further
narrow the choices for a higher-resolution set of smart defaults.
These can be used if the software's educated guesses aren't good
enough, but obviously the learning curve is steeper for the user.

Another possibility is that the software could tell the user what
pitch (ratio or cents or ET degree etc.) it has interpreted the
nominal-plus-sagittal as, and if it isn't what they wanted then they
should have the option of explicitly entering the pitch _as_ a ratio
or cents or ET degree etc. I believe Robert Walker intends to do
something like this in Fractal Tune Smithy.

And don't forget that this whole smart defaults thing is typically
about fine adjustments of pitch (less than 2 cents).

Regards,
-- Dave Keenan 
